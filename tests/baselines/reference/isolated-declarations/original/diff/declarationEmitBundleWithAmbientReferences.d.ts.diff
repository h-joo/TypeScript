// [[Reason: TSC adds type reference directives.]] ////

//// [tests/cases/compiler/declarationEmitBundleWithAmbientReferences.ts] ////

===================================================================
--- TSC	declarations
+++ DTE	declarations
@@ -4,34 +4,6 @@
 import * as DatastoreResult from "src/datastore_result";
 export declare const build: () => DatastoreResult.T<string>;
 
 //// [src/datastore_result.d.ts]
-/// <reference path="../lib/lib.d.ts" />
 import { Result } from "lib/result";
 export type T<T> = Result<Error, T>;
-
-/// [Errors] ////
-
-src/datastore_result.ts(1,1): error TS9025: Declaration emit for this expression requires adding a path reference directive to '../lib/lib.d.ts' with --isolatedDeclarations.
-
-
-==== lib/lib.d.ts (0 errors) ====
-    declare module "lib/result" {
-        export type Result<E extends Error, T> = (E & Failure<E>) | (T & Success<T>);
-        export interface Failure<E extends Error> { }
-        export interface Success<T> { }
-    }
-    
-==== src/datastore_result.ts (1 errors) ====
-    import { Result } from "lib/result";
-    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-!!! error TS9025: Declaration emit for this expression requires adding a path reference directive to '../lib/lib.d.ts' with --isolatedDeclarations.
-    
-    export type T<T> = Result<Error, T>;
-    
-==== src/conditional_directive_field.ts (0 errors) ====
-    import * as DatastoreResult from "src/datastore_result";
-    
-    export const build = (): DatastoreResult.T<string> => {
-    	return null;
-    };
-    
\ No newline at end of file
