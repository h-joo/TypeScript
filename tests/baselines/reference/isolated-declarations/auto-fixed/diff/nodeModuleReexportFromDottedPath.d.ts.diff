// [[Reason: checker.typeToTypeNode deliberately fails on types that originate from node_modules.]] ////

//// [tests/cases/compiler/nodeModuleReexportFromDottedPath.ts] ////

===================================================================
--- TSC	declarations
+++ DTE	declarations
@@ -1,7 +1,32 @@
 
 
 //// [/index.d.ts]
-import { PrismaClient } from "@prisma/client";
-declare const _default: PrismaClient<import(".prisma/client").PrismaClientOptions>;
+declare const _default: invalid;
 export default _default;
\ No newline at end of file
-//# sourceMappingURL=index.d.ts.map
+//# sourceMappingURL=index.d.ts.map
+/// [Errors] ////
+
+/index.ts(4,16): error TS9038: Default exports can't be inferred with --isolatedDeclarations.
+
+
+==== /node_modules/.prisma/client/index.d.ts (0 errors) ====
+    export interface PrismaClientOptions {
+      rejectOnNotFound?: any;
+    }
+    
+    export class PrismaClient<T extends PrismaClientOptions = PrismaClientOptions> {
+      private fetcher;
+    }
+    
+==== /node_modules/@prisma/client/index.d.ts (0 errors) ====
+    export * from ".prisma/client";
+    
+==== /index.ts (1 errors) ====
+    import { PrismaClient } from "@prisma/client";
+    declare const enhancePrisma: <TPrismaClientCtor>(client: TPrismaClientCtor) => TPrismaClientCtor & { enhanced: unknown };
+    const EnhancedPrisma = enhancePrisma(PrismaClient);
+    export default new EnhancedPrisma();
+                   ~~~~~~~~~~~~~~~~~~~~
+!!! error TS9038: Default exports can't be inferred with --isolatedDeclarations.
+!!! related TS9037 /index.ts:4:1: Move the expression in default export to a variable and add a type annotation to it.
+    
\ No newline at end of file
