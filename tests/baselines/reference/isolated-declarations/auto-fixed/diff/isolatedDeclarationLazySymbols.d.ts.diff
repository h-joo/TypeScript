// [[Reason: Function declarations are not fixed]] ////

//// [tests/cases/compiler/isolatedDeclarationLazySymbols.ts] ////

===================================================================
--- TSC	declarations
+++ DTE	declarations
@@ -1,8 +1,9 @@
 
 
 //// [isolatedDeclarationLazySymbols.d.ts]
 export declare function foo(): void;
+export declare namespace foo { }
 export declare namespace foo {
     var b: string;
 }
 declare const o: {
@@ -22,12 +23,13 @@
 /// [Errors] ////
 
 isolatedDeclarationLazySymbols.ts(5,9): error TS2733: Property 'b' was also declared here.
 isolatedDeclarationLazySymbols.ts(16,1): error TS2718: Duplicate property 'b'.
+isolatedDeclarationLazySymbols.ts(16,1): error TS9023: Assigning properties to functions without declaring them is not supported with --isolatedDeclarations. Add an explicit declaration for the properties assigned to this function.
 isolatedDeclarationLazySymbols.ts(19,5): error TS1166: A computed property name in a class property declaration must have a simple literal type or a 'unique symbol' type.
 
 
-==== isolatedDeclarationLazySymbols.ts (3 errors) ====
+==== isolatedDeclarationLazySymbols.ts (4 errors) ====
     export function foo(): void {
     
     }
     export declare namespace foo {
@@ -46,8 +48,10 @@
     foo[o["prop.inner"]] ="A";
     foo[o.prop.inner] = "B";
     ~~~~~~~~~~~~~~~~~
 !!! error TS2718: Duplicate property 'b'.
+    ~~~~~~~~~~~~~~~~~
+!!! error TS9023: Assigning properties to functions without declaring them is not supported with --isolatedDeclarations. Add an explicit declaration for the properties assigned to this function.
     
     export class Foo {
         [o["prop.inner"]] ="A"
         ~~~~~~~~~~~~~~~~~
